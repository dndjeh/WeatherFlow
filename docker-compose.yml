services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  producer:
    build: .
    container_name: producer
    depends_on:
      - kafka
    environment:
      API_KEY: ${API_KEY}
    command: python3 producer.py

  consumer:
    build: .
    container_name: consumer
    depends_on:
      - kafka
    command: python3 consumer.py
  
  # preprocessing:
  #   build: .
  #   container_name: preprocessing
  #   depends_on:
  #     - mysql
  #   command: python3 preprocessing.py


  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"   # Spark Web UI
      - "7077:7077"   # Spark Master

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master

  jupyter:
    image: jupyter/pyspark-notebook
    container_name: spark-jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    depends_on:
      - spark-master
      - spark-worker

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"          # 로컬 3306 → 컨테이너 3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: weatherflow
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - consumer
    # volumes:
    #   - ./mysql-data:/var/lib/mysql

networks:
  default:
    driver: bridge
